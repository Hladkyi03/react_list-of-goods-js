{"version":3,"sources":["Components/Good/Good.jsx","Components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["Good","good","GoodList","goods","map","goodsFromServer","App","useState","appliedSort","setAppliedSort","reverseOrder","setReverseOrder","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iOAAaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,oBAAI,UAAQ,OAAZ,SAAoBA,KCCTC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAMA,KAAMA,GAAWA,SCAhBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAM,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAOMC,EAlCR,SAAwBT,EAAxB,GAA+D,IAA9BK,EAA6B,EAA7BA,YAAaE,EAAgB,EAAhBA,aACtCE,EAAY,YAAOT,GAqBzB,OAnBIK,GACFI,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,IAAK,iBACH,OAAOM,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXP,GACFE,EAAaM,UAGRN,EAYcO,CAAed,EAClC,CAAEG,cAAaE,iBAEjB,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoC,mBAAhBZ,EAAmC,GAAK,YACrEc,QAAS,kBAAMb,EAAe,mBAHhC,iCAQA,wBACEY,KAAK,SACLD,UAAS,4BAAuC,WAAhBZ,EAA2B,GAAK,YAChEc,QAAS,kBAAMb,EAAe,WAHhC,4BAQA,wBACEY,KAAK,SACLD,UAAS,4BAAuBV,EAAe,GAAK,YACpDY,QAAS,kBAAMX,GAAiBD,IAHlC,sBAQEF,GAAeE,IACf,wBACEW,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAtCjBb,EAAe,SACfE,GAAgB,IAkCV,sBAWJ,cAAC,EAAD,CAAUR,MAAOS,QC3FvBW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7028d497.chunk.js","sourcesContent":["export const Good = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { Good } from '../Good/Good';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <Good good={good} key={good} />\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodList } from './Components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getSortedGoods(goods, { appliedSort, reverseOrder }) {\n  const visibleGoods = [...goods];\n\n  if (appliedSort) {\n    visibleGoods.sort((good1, good2) => {\n      switch (appliedSort) {\n        case 'alphabetically':\n          return good1.localeCompare(good2);\n\n        case 'length':\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseOrder) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [appliedSort, setAppliedSort] = useState('');\n  const [reverseOrder, setReverseOrder] = useState(false);\n\n  const reset = () => {\n    setAppliedSort('');\n    setReverseOrder(false);\n  };\n\n  const visibleGoods = getSortedGoods(goodsFromServer,\n    { appliedSort, reverseOrder });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${appliedSort === 'alphabetically' ? '' : 'is-light'}`}\n          onClick={() => setAppliedSort('alphabetically')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${appliedSort === 'length' ? '' : 'is-light'}`}\n          onClick={() => setAppliedSort('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${reverseOrder ? '' : 'is-light'}`}\n          onClick={() => setReverseOrder(!reverseOrder)}\n        >\n          Reverse\n        </button>\n\n        {(appliedSort || reverseOrder) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => reset()}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}